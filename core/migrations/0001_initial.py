# Generated by Django 3.2 on 2021-04-28 05:15

import core.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(help_text='E-mail do usuário', max_length=254, unique=True, verbose_name='E-mail')),
                ('first_name', models.CharField(blank=True, help_text='Primeiro nome', max_length=30, verbose_name='Nome')),
                ('last_name', models.CharField(blank=True, help_text='Nome de família', max_length=30, verbose_name='Sobrenome')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True, help_text='Indica se o usuário está ativo ou não', verbose_name='Usuário ativo?')),
                ('is_staff', models.BooleanField(default=True, help_text='Faz parte da equipe da loja?', verbose_name='Equipe?')),
                ('is_superuser', models.BooleanField(default=False, help_text='É um administrador do sistema?', verbose_name='Adminstrador?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['first_name', 'last_name', 'email'],
            },
            managers=[
                ('objects', core.managers.UserManager()),
            ],
        ),
    ]
